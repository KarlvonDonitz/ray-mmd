#include "../ray.conf"
#include "../ray_advanced.conf"
#include "../shader/math.fxsub"
#include "../shader/common.fxsub"
#include "../shader/Shadow.fxsub"

static float4x4 matLightProject = CreateOrthoProject(2, 2, mPSSMDepthZMin, mPSSMDepthZMax);
static float4x4 matLightView = CreateLightViewMatrix(MainLightDirection, -MainLightDirection * mLightDistance);
static float4x4 matLightViewProject = mul(mul(matLightView, matLightProject), CreateReversedDepthMatrix());
static float4x4 matLightViewFromCameraView = mul(matViewInverse, matLightView);
static float4x4 lightCropParams = CreateLightCropParams(matLightViewFromCameraView, mPSSMCascadeDistance, mPSSMCascadeSplits, CASCADE_SHADOW_MAP_SIZE);

#if CASTER_ALPHA_MAP_ENABLE
texture DiffuseMap: MATERIALTEXTURE;
sampler DiffuseMapSamp = sampler_state
{
	texture = <DiffuseMap>;
	MINFILTER = POINT; MAGFILTER = POINT; MIPFILTER = POINT;
	ADDRESSU = WRAP; ADDRESSV = WRAP;
};
#endif

void CascadeShadowMapVS(
	in float4 Position : POSITION,
	in float2 Texcoord : TEXCOORD0,
	out float3 oTexcoord : TEXCOORD0,
	out float4 oPosition : POSITION)
{
	oPosition = mul(Position, matLightViewProject);
	oPosition.xy = oPosition.xy * lightCropParams[PSSM_LAYERED_NUM].xy + lightCropParams[PSSM_LAYERED_NUM].zw;

	oTexcoord = float4(Texcoord, oPosition.z, 1);
}

float4 CascadeShadowMapPS(in float4 uv : TEXCOORD0) : COLOR
{
#if CASTER_ALPHA_ENABLE
	float alpha = MaterialDiffuse.a;
#if CASTER_ALPHA_MAP_ENABLE
	if (use_texture) alpha *= tex2D(DiffuseMapSamp, uv.xy).a;
#endif
	clip(alpha - CasterAlphaThreshold);
#endif
	return uv.z;
}

technique DepthTech<string MMDPass = "object_ss";
>{
	pass CascadeShadowMap {
		ZFunc = Greater;
		AlphaBlendEnable = false; AlphaTestEnable = false;
		VertexShader = compile vs_3_0 CascadeShadowMapVS();
		PixelShader  = compile ps_3_0 CascadeShadowMapPS();
	}
}

technique DepthTec<string MMDPass = "object";>{}
technique EdgeTec<string MMDPass = "edge";>{}
technique ShadowTec<string MMDPass = "shadow";>{}
technique ZplotTec<string MMDPass = "zplot";>{}